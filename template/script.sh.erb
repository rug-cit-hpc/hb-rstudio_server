#!/usr/bin/env bash

# Clean the environment
module purge
  
set -x
#
# Start RStudio Server
#
  
# Load the required environment
module load <%= context.version %>
  
# PAM auth helper used by RStudio
export WORKING_DIR="<%= session.staged_root %>"
export RSTUDIO_AUTH="${WORKING_DIR}/bin/auth"
  
# Generate an `rsession` wrapper script
export RSESSION_WRAPPER_FILE="${WORKING_DIR}/rsession.sh"
(
umask 077
sed 's/^ \{2\}//' > "${RSESSION_WRAPPER_FILE}" << EOL
  #!/usr/bin/env bash

  # Log all output from this script
  export RSESSION_LOG_FILE="${WORKING_DIR}/rsession.log"
  
  exec &>>"\${RSESSION_LOG_FILE}"
  
  # Launch the original command
  echo "Launching rsession..."
  set -x
  exec rsession --r-libs-user "${R_LIBS_USER}" "\${@}"
EOL
)
chmod 700 "${RSESSION_WRAPPER_FILE}"
  
# Set working directory to home directory
cd "${HOME}"
  
export TMPDIR="$(mktemp -d)"
  
mkdir -p "$TMPDIR/rstudio-server"
python -c 'from uuid import uuid4; print(uuid4())' > "$TMPDIR/rstudio-server/secure-cookie-key"
chmod 0600 "$TMPDIR/rstudio-server/secure-cookie-key"
  
export DATABASE_CONFIG_FILE="${TMPDIR}/rstudio-server/database.config"
echo "directory=${TMPDIR}/rstudio-server" > ${DATABASE_CONFIG_FILE}
chmod 700 "${DATABASE_CONFIG_FILE}"
  
# Launch the RStudio Server
echo "Starting up rserver..."
  
rserver \
 --www-port "${port}" \
 --rsession-path "${RSESSION_WRAPPER_FILE}" \
 --server-data-dir "${TMPDIR}/rstudio-server/" \
 --server-pid-file "${TMPDIR}/rstudio-server/rserver.pid" \
 --database-config-file "${DATABASE_CONFIG_FILE}" \
 --auth-none 0 \
 --auth-pam-helper-path "${RSTUDIO_AUTH}" \
 --auth-encrypt-password 0 \
 --server-user ${USER}

echo 'exited...'
